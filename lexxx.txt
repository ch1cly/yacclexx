%{
#include <stdio.h>
#include "y.tab.h"
int yylval;
int num, r, p;
int character_number;
%}

letter [A-Za-z]
digit [0-9]
tz [;]

%%
[Ee][Xx][Ii][Tt] 		{printf("\n exit \n"); return yEXIT;}
[Ff][Oo][Rr] 			{printf("\n for \t"); return yFOR;}
[Ee][Nn][Dd][Ff][Oo][Rr] 		{printf("\n endfor \n"); return yENDFOR;}
[Ss][Tt][Ee][Pp] 		{printf("step \t"); return ySTEP;}
[Tt][Oo] 			{printf("to \t"); return yTO;}
[Ll][Oo][Oo][Pp] 		{printf("\n loop \t"); return yLOOP;}
[Nn][Ee][Xx][Tt] 		{printf("\n next \n"); return yNEXT;}
[Ee][Xx][Ee][Cc][Uu][Tt][Ee]  	{printf("\n command(execute) \n"); return yEXECUTE;}
[Rr][Ee][Aa][Dd]  		{printf("\n command(read) \n"); return yREAD;}
[Ww][Rr][Ii][Tt][Ee] 		{printf("\n command(write) \n"); return yWRITE;}
(0|[1-9][0-9]*)          {  
                          character_number = character_number + yyleng;
                          printf("number \t");
                          yylval = yytext[0]-'0';

                          for (int i  = 1; i < yyleng; i++){
                              yylval = yylval * 10 + (yytext[i]-'0');
                           }
                           printf("%d \t", yylval);
                                                     return yNUMBER;}

({letter}({letter}|{digit})*)    {printf(" varname\t"); return yVARNAME;}

";"			{printf("; \n"); return ySEMICOLON;}
"="			{printf("operatror= \t"); return yEQ;}
"+"			{printf("operatror+ \t"); return yPLUS;}
"-"			{printf("operatror- \t"); return yMINUS;}
"/"			{printf("operatror/ \t"); return yDIVIDE;}
"*"			{printf("operatror* \t"); return yMULT;}
[ \t]+                                   ;
\n 			/*return('\n')*/;
. 			/*return(yytext[0])*/;

%%
   
int main(){    
    return yylex();
}
